version: "3.7"
services:
  db:
    image: mariadb:10.5
    container_name: db-anonaddy
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    volumes:
      - "${APP_DATA_DIR}/db:/var/lib/mysql"
    environment:
      MARIADB_DATABASE: anonaddy
      MARIADB_USER: anonaddy
      MARIADB_ROOT_PASSWORD: anonaddy
      MARIADB_PASSWORD: anonaddy
    restart: unless-stopped
    networks:
      - tipi_main_network

  redis:
    image: redis:4.0-alpine
    container_name: redis-anonaddy
    restart: unless-stopped
    networks:
      - tipi_main_network

  anonaddy:
    image: anonaddy/anonaddy:0.11.1
    container_name: anonaddy
    ports:
      - 25:25
      - ${APP_PORT}:8000
    depends_on:
      - db
      - redis
    volumes:
      - "${APP_DATA_DIR}/data:/data"
    environment:
      TZ: ${TZ}
      DB_HOST: db-anonaddy
      DB_PASSWORD: anonaddy
      REDIS_HOST: redis-anonaddy
      APP_KEY: ${ANONADDY_KEY}
      ANONADDY_DOMAIN: ${ANONADDY_DOMAIN}
      ANONADDY_SECRET: ${ANONADDY_SECRET}
      ANONADDY_ADMIN_USERNAME: ${ANONADDY_USERNAME}
      POSTFIX_DEBUG: true
    restart: unless-stopped
    networks:
      - tipi_main_network
    # labels:
    #     traefik.enable: true
    #     traefik.http.routers.anonaddy.rule: Host(`anonaddy.tipi.home`)
    #     traefik.http.routers.anonaddy.tls: true
    #     traefik.http.routers.anonaddy.entrypoints: websecure
    #     traefik.http.routers.anonaddy.service: anonaddy
    #     traefik.http.services.anonaddy.loadbalancer.server.port: 8000
    # labels:
    #     traefik.enable: true
    #     traefik.http.routers.anonaddy.rule: PathPrefix(`/anonaddy`)

    #     # Redirect to ending /
    #     traefik.http.middlewares.anonaddy-redirect.redirectregex.regex: ^(http:\/\/(\[[\w:.]+\]|[\w\._-]+)(:\d+)?)\/anonaddy$$
    #     traefik.http.middlewares.anonaddy-redirect.redirectregex.replacement: $${1}/anonaddy/

    #     # Strip /anonaddy/ from URL
    #     traefik.http.middlewares.anonaddy-stripprefix.stripprefixregex.regex: (/anonaddy/|/anonaddy)

    #     traefik.http.middlewares.anonaddy-headers.headers.customrequestheaders.Host: $$host
    #     traefik.http.middlewares.anonaddy-headers.headers.customrequestheaders.X-Forwarded-Proto: $$scheme
    #     traefik.http.middlewares.anonaddy-headers.headers.customrequestheaders.X-Forwarded-For: $$proxy_add_x_forwarded_for
    #     traefik.http.middlewares.anonaddy-headers.headers.customrequestheaders.X-Real-IP: $$remote_addr
    #     traefik.http.middlewares.anonaddy-headers.headers.customrequestheaders.X-Frame-Options: "SAMEORIGIN"

    #     # Apply middleware
    #     traefik.http.routers.anonaddy.middlewares: anonaddy-redirect, anonaddy-stripprefix, anonaddy-headers

    #     traefik.http.routers.anonaddy.entrypoints: http
    #     traefik.http.routers.anonaddy.service: anonaddy
    #     traefik.http.services.anonaddy.loadbalancer.server.port: 8000
